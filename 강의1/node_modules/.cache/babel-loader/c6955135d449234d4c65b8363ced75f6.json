{"ast":null,"code":"var _jsxFileName = \"/Users/dongho/Desktop/devel/study_tmax_2023/lecture-1/src/components/Article/index.js\";\nimport React from 'react';\nimport './index.css';\n\nfunction zeroPad(value, len) {\n  const str = '0000000000' + value.toString();\n  return str.substring(str.length - len);\n}\n/* 파라미터 참고: https://unsplash.com/documentation#supported-parameters */\n\n\nfunction getParametersForUnsplash({\n  width,\n  height,\n  quality,\n  format\n}) {\n  return `?w=${width}&h=${height}&q=${quality}&fm=${format}&fit=crop`;\n}\n/*\n * 파라미터로 넘어온 문자열에서 일부 특수문자를 제거하는 함수\n * (Markdown으로 된 문자열의 특수문자를 제거하기 위함)\n * */\n\n\nfunction removeSpecialCharacter(str) {\n  const removeCharacters = ['#', '_', '*', '~', '&', ';', '!', '[', ']', '`', '>', '\\n', '=', '-'];\n  let _str = str;\n  let i = 0,\n      j = 0;\n\n  for (i = 0; i < removeCharacters.length; i++) {\n    j = 0;\n\n    while (j < _str.length) {\n      if (_str[j] === removeCharacters[i]) {\n        _str = _str.substring(0, j).concat(_str.substring(j + 1));\n        continue;\n      }\n\n      j++;\n    }\n  }\n\n  return _str;\n}\n\nfunction Article(props) {\n  const createdTime = new Date(props.createdTime);\n  return React.createElement(\"div\", {\n    className: 'Article',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: 'Article__summary',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: 'Article__summary__title',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.title), React.createElement(\"div\", {\n    className: 'Article__summary__desc',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, removeSpecialCharacter(props.content)), React.createElement(\"div\", {\n    className: 'Article__summary__etc',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, createdTime.getFullYear() + '.' + zeroPad(createdTime.getMonth() + 1, 2) + '.' + zeroPad(createdTime.getDate(), 2))), React.createElement(\"div\", {\n    className: 'Article__thumbnail',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.image + getParametersForUnsplash({\n      width: 1200,\n      height: 1200,\n      quality: 80,\n      format: 'jpg'\n    }),\n    alt: \"thumbnail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })));\n}\n\nexport default Article;","map":{"version":3,"sources":["/Users/dongho/Desktop/devel/study_tmax_2023/lecture-1/src/components/Article/index.js"],"names":["React","zeroPad","value","len","str","toString","substring","length","getParametersForUnsplash","width","height","quality","format","removeSpecialCharacter","removeCharacters","_str","i","j","concat","Article","props","createdTime","Date","title","content","getFullYear","getMonth","getDate","image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,aAAP;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,GAAxB,EAA6B;AAC3B,QAAMC,GAAG,GAAG,eAAeF,KAAK,CAACG,QAAN,EAA3B;AACA,SAAOD,GAAG,CAACE,SAAJ,CAAcF,GAAG,CAACG,MAAJ,GAAaJ,GAA3B,CAAP;AACD;AAED;;;AACA,SAASK,wBAAT,CAAkC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA;AAAzB,CAAlC,EAAoE;AAClE,SAAQ,MAAKH,KAAM,MAAKC,MAAO,MAAKC,OAAQ,OAAMC,MAAO,WAAzD;AACD;AAED;;;;;;AAIA,SAASC,sBAAT,CAAgCT,GAAhC,EAAqC;AACnC,QAAMU,gBAAgB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,IAAxD,EAA8D,GAA9D,EAAmE,GAAnE,CAAzB;AACA,MAAIC,IAAI,GAAGX,GAAX;AACA,MAAIY,CAAC,GAAG,CAAR;AAAA,MACEC,CAAC,GAAG,CADN;;AAGA,OAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,gBAAgB,CAACP,MAAjC,EAAyCS,CAAC,EAA1C,EAA8C;AAC5CC,IAAAA,CAAC,GAAG,CAAJ;;AACA,WAAOA,CAAC,GAAGF,IAAI,CAACR,MAAhB,EAAwB;AACtB,UAAIQ,IAAI,CAACE,CAAD,CAAJ,KAAYH,gBAAgB,CAACE,CAAD,CAAhC,EAAqC;AACnCD,QAAAA,IAAI,GAAGA,IAAI,CAACT,SAAL,CAAe,CAAf,EAAkBW,CAAlB,EAAqBC,MAArB,CAA4BH,IAAI,CAACT,SAAL,CAAeW,CAAC,GAAG,CAAnB,CAA5B,CAAP;AACA;AACD;;AACDA,MAAAA,CAAC;AACF;AACF;;AAED,SAAOF,IAAP;AACD;;AAED,SAASI,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAMC,WAAW,GAAG,IAAIC,IAAJ,CAASF,KAAK,CAACC,WAAf,CAApB;AACA,SACE;AAAK,IAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CD,KAAK,CAACG,KAAlD,CADF,EAEE;AAAK,IAAA,SAAS,EAAE,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CV,sBAAsB,CAACO,KAAK,CAACI,OAAP,CAAjE,CAFF,EAGE;AAAK,IAAA,SAAS,EAAE,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,WAAW,CAACI,WAAZ,KACC,GADD,GAECxB,OAAO,CAACoB,WAAW,CAACK,QAAZ,KAAyB,CAA1B,EAA6B,CAA7B,CAFR,GAGC,GAHD,GAICzB,OAAO,CAACoB,WAAW,CAACM,OAAZ,EAAD,EAAwB,CAAxB,CALX,CAHF,CADF,EAYE;AAAK,IAAA,SAAS,EAAE,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEP,KAAK,CAACQ,KAAN,GAAcpB,wBAAwB,CAAC;AAACC,MAAAA,KAAK,EAAE,IAAR;AAAcC,MAAAA,MAAM,EAAE,IAAtB;AAA4BC,MAAAA,OAAO,EAAE,EAArC;AAAyCC,MAAAA,MAAM,EAAE;AAAjD,KAAD,CAAhD;AAA2G,IAAA,GAAG,EAAC,WAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,CADF;AAkBD;;AAED,eAAeO,OAAf","sourcesContent":["import React from 'react'\n\nimport './index.css'\n\nfunction zeroPad(value, len) {\n  const str = '0000000000' + value.toString()\n  return str.substring(str.length - len)\n}\n\n/* 파라미터 참고: https://unsplash.com/documentation#supported-parameters */\nfunction getParametersForUnsplash({width, height, quality, format}) {\n  return `?w=${width}&h=${height}&q=${quality}&fm=${format}&fit=crop`\n}\n\n/*\n * 파라미터로 넘어온 문자열에서 일부 특수문자를 제거하는 함수\n * (Markdown으로 된 문자열의 특수문자를 제거하기 위함)\n * */\nfunction removeSpecialCharacter(str) {\n  const removeCharacters = ['#', '_', '*', '~', '&', ';', '!', '[', ']', '`', '>', '\\n', '=', '-']\n  let _str = str\n  let i = 0,\n    j = 0\n\n  for (i = 0; i < removeCharacters.length; i++) {\n    j = 0\n    while (j < _str.length) {\n      if (_str[j] === removeCharacters[i]) {\n        _str = _str.substring(0, j).concat(_str.substring(j + 1))\n        continue\n      }\n      j++\n    }\n  }\n\n  return _str\n}\n\nfunction Article(props) {\n  const createdTime = new Date(props.createdTime)\n  return (\n    <div className={'Article'}>\n      <div className={'Article__summary'}>\n        <div className={'Article__summary__title'}>{props.title}</div>\n        <div className={'Article__summary__desc'}>{removeSpecialCharacter(props.content)}</div>\n        <div className={'Article__summary__etc'}>\n          {createdTime.getFullYear() +\n            '.' +\n            zeroPad(createdTime.getMonth() + 1, 2) +\n            '.' +\n            zeroPad(createdTime.getDate(), 2)}\n        </div>\n      </div>\n      <div className={'Article__thumbnail'}>\n        <img src={props.image + getParametersForUnsplash({width: 1200, height: 1200, quality: 80, format: 'jpg'})} alt=\"thumbnail\" />\n      </div>\n    </div>\n  )\n}\n\nexport default Article\n"]},"metadata":{},"sourceType":"module"}